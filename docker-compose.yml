services:
  db:
    image: postgres:17-alpine
    container_name: db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - property_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: property_backend
    env_file:
      - /.env

    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    command:
      [
        "/bin/sh",
        "-c",
        "python /a/manage.py migrate && python /a/manage.py runserver 0.0.0.0:8000",
      ]
    volumes:
      - ./backend:/a

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: property_frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    depends_on:
      - backend

  k6:
    image: grafana/k6:latest
    container_name: k6_runner
    volumes:
      - ./performance-tests:/k6 
    depends_on:
      - backend
    environment:
      BACKEND_URL: http://backend:8000
    command: ["run", "/k6/test.js"]

volumes:
  property_data:
